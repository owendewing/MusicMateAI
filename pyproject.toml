[project]
name = "music-production-ai"
version = "1.0.0"
description = "AI Assistant for Music Production"
authors = [
    {name = "Music Mate AI Team", email = "team@musicmate.ai"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-community>=0.0.10",
    "langchain-core>=0.1.0",
    "langgraph>=0.2.0",
    "langchain-qdrant>=0.1.0",
    "openai>=1.0.0",
    "tiktoken>=0.5.0",
    "reportlab>=4.0.7",
    "mido>=1.3.0",
    "pymupdf>=1.26.3",
    "tavily-python>=0.3.0",
    "python-multipart>=0.0.6",
    # Advanced retrieval dependencies
    "langchain-cohere>=0.4.5",
    "ragas>=0.3.0",
    "rapidfuzz>=3.13.0",
    "python-dotenv>=1.1.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend"]
include = [
    "backend/**/*.py",
    "data/**/*",
    "uploads/**/*",
]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short" 